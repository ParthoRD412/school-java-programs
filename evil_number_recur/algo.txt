Algorithm for evil number using recurtion

Algorithm for int decimal_to_binary(int n):
step 1 : Create an empty string to store the binary equivalent.
step 2 : Run a while loop for binary digit extraction then concatenate the digits to the string created previously.
step 3 : Return the integer value of the string.

Algorithm for int freq(int n):
step 1 : Check if n = 0 then the possible number of 1's is 0 so return 0.
step 2 : If not n = 0 then extract last digit of the number and check for 1 if found then 1 + number of 1's in n%10 is returned.
step 3 : If the previous case dose not work then the extracted digit is 0 so number of digits in n%10 is returned.

Algorithm for main function:
step 1 : Take a number as input to check for evil number.
step 2 : Create an evil object.
step 3 : The inputed number is converted to its binary equivalent and number of 1's in it are counted.
step 4 : If there are even number of 1's then print evil number else not an evil number.